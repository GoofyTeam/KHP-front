/* eslint-disable */

import {
  Maybe,
  InputMaybe,
  Exact,
  MakeOptional,
  MakeMaybe,
  MakeEmpty,
  Incremental,
  Scalars,
  AllergenEnum,
  Category,
  CategoryPaginator,
  CategoryShelfLife,
  Company,
  CompanyBusinessHour,
  CompanyOrderByField,
  CompanyOrderByOrderByClause,
  CompanyPaginator,
  Ingredient,
  IngredientStockMovementsArgs,
  IngredientOrderByClause,
  IngredientOrderByField,
  IngredientPaginator,
  IngredientQuantity,
  Location,
  LocationOrderByField,
  LocationOrderByOrderByClause,
  LocationPaginator,
  LocationType,
  LocationTypeOrderByField,
  LocationTypeOrderByOrderByClause,
  LocationTypePaginator,
  Loss,
  LossesStats,
  LossOrderByClause,
  LossOrderByField,
  LossPaginator,
  LossReason,
  MeasurementUnitType,
  Menu,
  MenuAvailableArgs,
  MenuCategory,
  MenuCategoryPaginator,
  MenuItem,
  MenuItemEntity,
  MenuPaginator,
  MenuServiceTypeEnum,
  MenuType,
  OpenFoodFactsProduct,
  Order,
  OrderByClause,
  OrderByRelationAggregateFunction,
  OrderByRelationWithColumnAggregateFunction,
  OrderHistory,
  OrderHistoryActionEnum,
  OrderOrderByClause,
  OrderOrderByField,
  OrderPaginator,
  OrdersStats,
  OrderStatusEnum,
  OrderStep,
  OrderStepOrderByClause,
  OrderStepOrderByField,
  OrderStepPaginator,
  OrderStepStatusEnum,
  PaginatorInfo,
  Perishable,
  PerishableFilter,
  Preparation,
  PreparationEntity,
  PreparationEntityItem,
  PreparationOrderByClause,
  PreparationOrderByField,
  PreparationPaginator,
  PreparationPreparableQuantity,
  PreparationQuantity,
  PublicMenuSettings,
  Query,
  QuerySearchArgs,
  QueryCategoryArgs,
  QueryCompanyArgs,
  QueryIngredientArgs,
  QueryIngredientTresholdArgs,
  QueryLocationArgs,
  QueryLocationTypeArgs,
  QueryLossesStatsArgs,
  QueryMenuArgs,
  QueryMenuCategoryArgs,
  QueryOrderArgs,
  QueryOrdersStatsArgs,
  QueryOrderStepArgs,
  QueryPerishablesArgs,
  QueryPreparationArgs,
  QueryPreparationsThresholdArgs,
  QueryRoomArgs,
  QuerySearchInStockArgs,
  QueryStepMenuArgs,
  QueryTableArgs,
  QueryUserArgs,
  QueryCategoriesArgs,
  QueryCompaniesArgs,
  QueryIngredientsArgs,
  QueryLocationsArgs,
  QueryLocationTypesArgs,
  QueryLossesArgs,
  QueryMenusArgs,
  QueryMenuCategoriesArgs,
  QueryOrdersArgs,
  QueryOrderStepsArgs,
  QueryPreparationsArgs,
  QueryRoomsArgs,
  QueryStepMenusArgs,
  QueryStockMovementsArgs,
  QueryTablesArgs,
  QueryUsersArgs,
  QueryOrdersOrderByOrderByClause,
  QueryOrderStepsOrderByOrderByClause,
  QueryRoomsOrderByOrderByClause,
  QueryStepMenusOrderByOrderByClause,
  QueryTablesOrderByOrderByClause,
  QuickAccess,
  Room,
  RoomOrderByField,
  RoomPaginator,
  SearchResult,
  SortOrder,
  StepMenu,
  StepMenuOrderByClause,
  StepMenuOrderByField,
  StepMenuPaginator,
  StepMenuStatusEnum,
  StockMovement,
  StockMovementOrderByClause,
  StockMovementOrderByField,
  StockMovementPaginator,
  Table,
  TableOrderByField,
  TablePaginator,
  Trashed,
  UnitEnum,
  User,
  UserPaginator
} from 'generated/schema.graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type GetLocationsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLocationsQuery = { __typename?: 'Query', locations: { __typename?: 'LocationPaginator', data: Array<{ __typename?: 'Location', name: string, id: string }> } };


export const GetLocations = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"data"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<GetLocationsQuery, GetLocationsQueryVariables>;